<u><h3 class="title"></h3></u>
<a class="post-creator"></a>
<p class="full-content"></p>
<h3>Comments: </h3>
<div id="newComment">
    <!-- add comment posting ui here -->
</div>
<div id="comments"></div>
<button id="previousPage" onclick="previousPage()">Previous Page</button>
<button id="nextPage" onclick="nextPage()">Next Page</button>
<p id="pagep">Current Page: </p>
<script>
    let l = 10;
    let p = 1;
    const pagep = document.querySelector("#pagep");
    const id = parseInt("<%= id %>");
    const title = document.querySelector(".title");
    const postContent = document.querySelector(".full-content");
    const postCreator = document.querySelector(".post-creator");
    const getPost = async () => {
        const response = await fetch(`/api/v1/posts?id=${id}`);
        let post = await response.json();
        post = post.data[0];
        title.innerText = post.title;
        postCreator.innerText = "- " + post.display_name;
        postCreator.href = `/user/${post.poster_id}`
        postContent.innerText = post.content;
        //add comment feature later
    };
    const getComments = async (l = 10, p = 1) => {
        try {
            const response = await fetch(`/api/v1/comments?id=${id}&limit=${l}&page=${p}`);
            const comments = await response.json();
            if (comments.success) {return comments.data} else {throw err};
        } catch(err) {console.log(err)};
    };
    const showComments = async (l = 10, p = 1) => {
        const commentsDiv = document.querySelector("#comments");
        const comments = await getComments(l, p);
        if (!comments) {return false};
        const nextButton = document.querySelector("#nextPage");
        if (comments.length < l) {nextButton.style.display = "none"} else {nextButton.style.display = "inline"};
        commentsDiv.replaceChildren();
        console.log(comments);
        comments
        .map(element => {
            let div = document.createElement("div");
            div.classList.add("comment");
            let content = document.createElement("p"); let creator = document.createElement("a");
            content.classList.add("commentContent"); creator.classList.add("commentCreator");
            creator.href = `/user/${element.user_id}`;
            creator.innerText = "Commentor: " + element.display_name;
            content.innerText = element.content;
            let elements = [document.createElement("hr"), creator, document.createElement("br"), content, document.createElement("hr")]
            elements.forEach(element => {div.appendChild(element)});
            return div;
        })
        .forEach(element => {
            commentsDiv.appendChild(element);
        });
    };
    const updatePageP = () => {
        const previousPage = document.querySelector("#previousPage");
        pagep.innerText = "Current Page: " + p;
        if (p <= 1) {previousPage.style.display = "none"} else {previousPage.style.display = "inline"};
    };
    const nextPage = async () => {
        const result = await showComments(10, p + 1);
        if (result === false) {return false};
        p++;
        updatePageP();

    };
    const previousPage = async () => {
        if (p <= 1) {return false};
        p--;
        await showComments(10, p);
        updatePageP();
    };
    showComments();
    updatePageP();
    getPost();
</script>